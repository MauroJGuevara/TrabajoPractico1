
	Algoritmo sin_titulo
		definir vueloBA_BAR, vueloBA_SAL, vueloROS_BA, vueloMDP_MEN, menu, pasajero Como cadena
		definir contBA_BAR, ruta como entero
		Dimension vueloBA_BAR[120,8], vueloBA_SAL[120,8], vueloROS_BA[80,8], vueloMDP_MEN[80,8]
		contBA_BAR =0
		contBA_SAL = 0
		contROS_BA = 0
		contMDP_MEN = 0
		
		escribir "*****************************"
		Escribir  "    BIENVENIDOS A AIRMAX    "
		Escribir  "      Tu mejor opción       ";
		escribir "*****************************"
		escribir "              MENU           "
		
		menu = verificarMenu(menu)
		
		repetir 
			menu = verificaionMenu(menu)
			segun menu hacer
				"1":
					ruta = elegirRuta(ruta)
					
					Segun ruta
						1:
							si contBA_BAR <= 120
								cargarDatos(vueloBA_BAR, contBA_BAR)
								calcularMonto(vueloBA_BAR, contBA_BAR)
								
							SiNo
								escribir "El vuelo no tiene asientos disponibles"
						2:
							cargarDatos(vueloBA_SAL, contBA_SAL)
						3:
							cargarDatos(vueloROS_BA, contROS_BA)
						4:
							cargarDatos(vueloMDP_MEN, contMDP_MEN)
					FinSegun
					//pedis que ingfrese la ruta 
					elegirRuta(vueloBA_BAR,vueloBA_SAL,vueloROS_BA,vueloMDP_MEN)
					//pasar a venta pasaje (arreglo, contadorruta, contadorpasajero, ruta)
					ventaPasaje(asientosTotales,asientosBa_Bar,asientosBa_Salta,asientosMdp_Men,asientosRos_Ba,datoPasajeros,pasajero,vuelos)
					
					segun ruta
						1:
							calcular_monto(ruta,asientosBa_Bar,equipajePasajero)
						2:
							calcular_monto(ruta,asientosBa_Salta,equipajePasajero)
					FinSegun
				"2":
					//seleccion de ruta 
					//segun ruta subproceso buscapasaje y pasar datos de la ruta 
				"3":
					escribir "3"
				"4":
					escribir "ingrese el vuelo que desea ordenar"
					leer ruta
					segun ruta
						1:
							escribir "a por numero de asiento ascendente //b. Por numero de asiento Descendente"
							//añadir verificacion
							leer optAscDesc
							segun optAscDesc
								"a":
									ordenarAsc(vueloBA_BAR,contBA_BAR)
								"b":
									ordenarDesc(vueloBA_BAR,contBA_BAR)
							FinSegun
							//ejemplo
					FinSegun
				"SALIR":
					Escribir "    ¡ Adios !      "
					Escribir "Cerrando programa.."
			FinSegun
		hasta que menu = "SALIR"
FinAlgoritmo

subproceso cargarDatos(vuelo, cont por referencia)
	
	escribir "Escriba el nombre del pasajero: "
	leer vuelo[cont, 1]
	
	escribir "escriba el apellido del pasajero: "
	leer vuelo[cont, 2]

	escribir "escriba DNI del pasajero"
	leer vuelo[cont, 3]
	si 
		escribir "numero inválido"
		
		escribir "Ingrese su numero de telefono: "
		leer vuelo[cont, 4]
			escribir "numero inválido"
		
	     Escribir " equipaje en bodega : V-Verdadero / F-falso "
	     si vuelo[cont, 5] 
		 FinSi
		
	Escribir " escriba número de asiento: "
	leer vuelo[cont, 6]

	Escribir " escriba número de pasajero frecuente: "
	leer vuelo[cont, 7]
	
	vuelo[cont, 0] = cont +1
	
	
	
	
	
	
FinSubProceso

//__________________________________________________________ORDENAR ASCENDENTE__________________________________________________________
SubProceso ordenarAsc(vuelo,cont,columnaAOrdenar)
	definir aux Como Entero
	para i = 0 hasta cont-1
		para j = i + 1 hasta cont - 2
			si ConvertirANumero(vuelo[i,columnaAOrdenar]) < ConvertirANumero(vuelo[j,columnaAOrdenar])	//agregar a cada vuelo[*letra, *el numero de columna donde se encuentra el dato]
				para h=0 hasta cont - 2
				aux = ConvertirANumero(vuelo[i,columnaAOrdenar])										//el dato a buscar se podria preguntar arriba y se utilizaria como una variable en el ordenamiento ej: dni columna = 1 pasar el dato columna a buscar al subproceso
				vuelo[i,columnaAOrdenar] = vuelo[j,columnaAOrdenar]
				ConvertirANumero(vuelo[j,columnaAOrdenar]) = aux
			FinPara
			
			FinSi
		FinPara
	FinPara
	para k = 0 hasta cont - 1
		escribir vuelo[k,0] "||" vuelo[k,1] "||" // etc
	FinPara
FinSubProceso

//___________________________________________________ORDENAR DESCENDENTE_________________________________________________________________
SubProceso ordenarDesc(vuelo,cont,columnaAOrdenar)
	definir aux Como Entero
	para i = 0 hasta cont-1
		para j = i + 1 hasta cont - 2
			si ConvertirANumero(vuelo[i,columnaAOrdenar]) < ConvertirANumero(vuelo[j,columnaAOrdenar])//agregar a cada vuelo[*letra, *el numero de columna donde se encuentra el dato]
				para h = 0 hasta cont -2
				aux = ConvertirANumero(vuelo[i,columnaAOrdenar])									//el dato a buscar se podria preguntar arriba y se utilizaria como una variable en el ordenamiento ej: dni columna = 1 pasar el dato columna a buscar al subproceso
				vuelo[i,columnaAOrdenar] = vuelo[j,columnaAOrdenar]
				convertirANumero(vuelo[j,columnaAOrdenar]) = aux
			FinPara
			
			FinSi
		FinPara
	FinPara
	para k = 0 hasta cont - 1
		escribir vuelo[k,0] "||" vuelo[k,1] "||" // etc
	FinPara
FinSubProceso

//_______________________________________________________BUSQUEDA DE PASAJERO_____________________________________________________________
SubProceso buscarPasaje(vuelo,cont)
	definir primero,ultimo,mitad,AsientoAbuscar Como Entero
	definir asientoEncontrdo Como Logico
	escribir "ingrese el asiento que desea buscar"
	leer AsientoAbuscar
	ordenarAsc(vuelo,cont,x)       // X seria la columna destinada a buscar el numero de asiento
	primero = 0
	ultimo = cont
	repetir
		mitad = trunc((primero + ultimo) / 2)							//agregar a cada vuelo[mitad, *el numero de columna donde se encuentra el dato]
		si vuelo[mitad,x] = AsientoAbuscar
			asientoEncontrdo = Verdadero
			
		Sino si vuelo[mitad,x] > AsientoAbuscar
				ultimo = ultimo - 1
			SiNo
				primero = primero + 1
			FinSi
		FinSi
	hasta que asientoEncontrdo o primero > ultimo
	si asientoEncontrdo 
		escribir "el numero encontrado esta en la posicion", mitad + 1 
	SiNo
		escribir "asiento no encontrado"
	FinSi
FinSubProceso

//_____________________________________________________VERIFICAR MENU_________________________________________________________

SubProceso verificacion = verificarMenu(menu) //verificacion y menu
	definir verificacion Como Caracter
	definir bandera Como Entero
	
	
	escribir "1 - Venta de pasaje"
	escribir "2 - Buscar pasaje vendido"
	escribir "3 - Buscar pasajero"
	escribir "4 - Ordenar y mostrar lista pasajeros"
	//a. Por numero de asiento Ascendente
	//b. Por numero de asiento Descendente
	escribir "5 - Listado/s"
	//a. Cantidad de pasajes vendido por ruta aerea
	//b. Porcentaje de ventas por ruta aerea
	
	escribir "Ingrese la palabra salir para finalizar el programa"
	
	repetir 
		leer verificacion
		
		si Mayusculas(verificacion) = "SALIR" o verificacion = "1" o verificacion = "2" o verificacion = "3" o verificacion = "4" o verificacion = "5"
			verificacion = Mayusculas(verificacion)
			bandera = 1
		sino 
			escribir "opcion incorrecta"
			bandera = 0
		FinSi
		
	hasta que bandera = 1

	
FinSubProceso

//______________________________________________________SELECCIONAR RUTA________________________________________________________


SubProceso opcionVuelo = elegirRuta(ruta)
	definir opcionVuelocomo entero
	Repetir
		escribir "Ingrese la opcion de la ruta que desea : "
		escribir"1-Buenos Aires - Bariloche"
		escribir"2-Bueno Aires - Salta"
		escribir"3-Rosario - Buenos Aires"
		escribir"4-Mar Del Plata - Mendoza"
		leer opcionVuelo
		si opcionVuelo< 1 o opcionVuelo > 4
			escribir "opcion incorrecta"
			
		FinSi
	hasta que opcionVuelo < 4 y opcionVuelo > 0
	
	
FinSubProceso



